{"version":3,"sources":["containers/SumShowerContainer.js","containers/RollButtonContainer.js","actions/addRollAction.js","containers/ClearButtonContainer.js","actions/clearRollsAction.js","components/DieComponent.js","containers/DiceContainer.js","App.js","reducers/reducers.js","reducers/rollResultReducer.js","reducers/rollSumReducer.js","index.js"],"names":["SumShower","className","this","props","sum","React","Component","connect","state","rollSum","dispatch","RollButton","handleClick","rollResult","rollDie","onClick","n","Math","floor","random","val","type","value","ClearButton","Die","DiceContainer","renderDice","currKey","rollResults","map","roll","renderedDice","numRolls","App","combineReducers","action","push","store","createStore","reducer","render","document","getElementById"],"mappings":"qUAGMA,E,4JAEF,WACI,OACI,qBAAKC,UAAU,aAAf,SACI,6BAAK,QAAUC,KAAKC,MAAMC,Y,GALlBC,IAAMC,WAmBfC,eANO,SAACC,EAAOL,GAC1B,MAAO,CACHC,IAAKI,EAAMC,YAJM,SAACC,EAAUP,GAAW,MAAO,KAQvCI,CAGbP,G,UClBIW,E,4MAcFC,YAAc,WACV,IAAIC,EAAa,EAAKC,QAAQ,GAC9B,EAAKX,MAAMY,QAAQF,I,4CAdvB,WACI,OACI,wBAAQZ,UAAU,qBAAqBc,QAASb,KAAKU,YAArD,SACK,gB,qBAmBb,SAAQI,GACJ,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAI,IAAM,M,GAzB5BX,IAAMC,WAwChBC,mBAFf,SAAyBC,EAAOL,GAAQ,MAAO,MARtB,SAAUO,EAAUP,GACzC,MAAO,CACHY,QAAS,SAACK,GACNV,ECvCD,CACHW,KAAM,MACNC,MDqCqBF,QAOdb,CAGbI,G,IE5CIY,E,4JAEF,WAAU,IAAD,OACL,OACI,wBAAQtB,UAAU,sBAAsBc,QAAS,kBAAM,EAAKZ,MAAMY,WAAlE,SACK,mB,GALSV,IAAMC,WAqBjBC,mBAFf,SAAyBC,EAAOL,GAAQ,MAAO,MARtB,SAAUO,EAAUP,GACzC,MAAO,CACHY,QAAS,WACLL,ECnBD,CACHW,KAAM,cDyBCd,CAGbgB,GE5BmBC,G,kKAEjB,WACI,OACI,qBAAKvB,UAAU,MAAf,SAAsBC,KAAKC,MAAMmB,Y,GAJZjB,IAAMC,YCIjCmB,G,kNAWFC,WAAa,WACT,IACIC,EAAU,EAEd,OADe,EAAKxB,MAAMyB,YAAYC,KAAI,SAACC,GAAD,OAAU,cAAC,EAAD,CAAKR,MAAOQ,GAAWH,S,4CAZ/E,WACI,IAAII,EAAe7B,KAAKwB,aACxB,OACI,qBAAKzB,UAAU,iBAAf,SACK8B,Q,GANW1B,IAAMC,YA4BnBC,eAPO,SAAUC,EAAOL,GACnC,MAAO,CACHyB,YAAapB,EAAMoB,YACnBI,SAAUxB,EAAMC,YALC,SAAUC,EAAUP,GAAQ,MAAO,KAS7CI,CAGbkB,GClBaQ,MAXf,WACE,OACE,sBAAKhC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCVSiC,kBAAgB,CAE3BN,YCNW,WAAyC,IAArBpB,EAAoB,uDAAZ,GAAI2B,EAAQ,uCACnD,OAAQA,EAAOd,MACX,IAAK,MAED,OADAb,EAAM4B,KAAKD,EAAOb,OACXd,EACX,IAAK,QAED,OADAA,EAAQ,GAEZ,QACI,OAAOA,IDFfC,QEPW,WAAqC,IAApBD,EAAmB,uDAAX,EAAG2B,EAAQ,uCAC/C,OAAQA,EAAOd,MACX,IAAK,MACD,OAAOb,EAAQ2B,EAAOb,MAC1B,IAAK,QACD,OAAO,EACX,QACI,OAAOd,MCCb6B,EAAQC,YAAYC,GAE1BC,iBACE,cAAC,IAAD,CAAUH,MAAOA,EAAjB,SACI,cAAC,EAAD,MAEJI,SAASC,eAAe,W","file":"static/js/main.8d8b4223.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass SumShower extends React.Component {\r\n\r\n    render() {\r\n        return(\r\n            <div className='sum-shower'>\r\n                <h1>{\"Sum: \" + this.props.sum}</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch, props) => {return {};}; //Not used\r\n\r\nlet mapStateToProps = (state, props) => {\r\n    return {\r\n        sum: state.rollSum\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SumShower);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport addRoll from '../actions/addRollAction';\r\nimport './css/ButtonContainer.css';\r\n\r\n\r\nclass RollButton extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <button className='button roll-button' onClick={this.handleClick}>\r\n                {\"Roll Dice\"}\r\n            </button>\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Defines behavior for button click. Rolls a random number from 1-6, \r\n     * then adds a new die to our list of dice.\r\n     */\r\n    handleClick = () => {\r\n        let rollResult = this.rollDie(6);\r\n        this.props.onClick(rollResult);\r\n    }\r\n\r\n    /**\r\n     * Rolls an 'n' sided die and returns the result\r\n     * @param {number} n the number of sides to the die\r\n     * @returns the number 'rolled' by the 'die'\r\n     */\r\n    rollDie(n) {\r\n        return Math.floor(Math.random() * (n - 1)) + 1;\r\n    }\r\n\r\n}\r\n\r\nlet mapDispatchToProps = function (dispatch, props) {\r\n    return {\r\n        onClick: (val) => {\r\n            dispatch(addRoll(val))\r\n        }\r\n    }\r\n};\r\n\r\nfunction mapStateToProps(state, props) {return {}}; //Not used\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(RollButton)","export default function addRoll(value) {\r\n    return {\r\n        type: 'ADD',\r\n        value: value,\r\n    }\r\n};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport clearRolls from '../actions/clearRollsAction';\r\nimport './css/ButtonContainer.css';\r\n\r\nclass ClearButton extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <button className='button clear-button' onClick={() => this.props.onClick()}>\r\n                {\"Clear Dice\"}\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = function (dispatch, props) {\r\n    return {\r\n        onClick: () => {\r\n            dispatch(clearRolls())\r\n        }\r\n    }\r\n};\r\n\r\nfunction mapStateToProps(state, props) {return {};}; //Not used\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ClearButton);","export default function clearRolls() {\r\n    return {\r\n        type: 'CLEAR'\r\n    }\r\n};","import React from 'react';\r\nimport './css/DieComponent.css';\r\nexport default class Die extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className='die'>{this.props.value}</div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Die from '../components/DieComponent';\r\n\r\nimport './css/DiceContainer.css';\r\n\r\nclass DiceContainer extends React.Component {\r\n\r\n    render() {\r\n        let renderedDice = this.renderDice();\r\n        return (\r\n            <div className='dice-container'>\r\n                {renderedDice}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderDice = () => {\r\n        let renderedDice;\r\n        let currKey = 0;\r\n        renderedDice = this.props.rollResults.map((roll) => <Die value={roll} key={currKey++} />);\r\n        return renderedDice;\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = function (dispatch, props) {return {};}; //Not used\r\n\r\nlet mapStateToProps = function (state, props) {\r\n    return {\r\n        rollResults: state.rollResults,\r\n        numRolls: state.rollSum\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(DiceContainer);","import React from 'react';\r\nimport './App.css';\r\n\r\nimport SumShower from './containers/SumShowerContainer';\r\nimport RollButton from './containers/RollButtonContainer';\r\nimport ClearButton from './containers/ClearButtonContainer';\r\nimport DiceContainer from './containers/DiceContainer';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <RollButton />\r\n      <ClearButton />\r\n      <SumShower />\r\n      <DiceContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\r\nimport rollResults from '../reducers/rollResultReducer';\r\nimport rollSum from '../reducers/rollSumReducer';\r\n\r\nexport default combineReducers({\r\n    //see https://gist.github.com/hunterjorgensen167/6dc8685dadb1f0b51c6828ab137c3ca4\r\n    rollResults: rollResults,\r\n    rollSum: rollSum, \r\n});","export default function rollResult(state = [], action) {\r\n    switch (action.type) {\r\n        case 'ADD':\r\n            state.push(action.value);\r\n            return state;\r\n        case 'CLEAR':\r\n            state = [];\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}","export default function rollSum(state = 0, action) {\r\n    switch (action.type) {\r\n        case \"ADD\":\r\n            return state + action.value;\r\n        case \"CLEAR\":\r\n            return 0;\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reducer from './reducers/reducers.js';\r\n\r\nconst store = createStore(reducer);\r\n\r\nrender(\r\n  <Provider store={store}>\r\n      <App />\r\n    </Provider>,\r\n  document.getElementById('root')\r\n  );\r\n  "],"sourceRoot":""}